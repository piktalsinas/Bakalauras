// <auto-generated />
using System;
using Bakalauras.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bakalauras.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250108185310_AddNameColumnToNodeConnections")]
    partial class AddNameColumnToNodeConnections
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bakalauras.Domain.Models.Node", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("Bakalauras.Domain.Models.NodeConnection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ToNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FromNodeId");

                    b.HasIndex("ToNodeId");

                    b.ToTable("NodeConnections");
                });

            modelBuilder.Entity("Bakalauras.Domain.Models.NodeConnection", b =>
                {
                    b.HasOne("Bakalauras.Domain.Models.Node", "FromNode")
                        .WithMany("OutgoingConnections")
                        .HasForeignKey("FromNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bakalauras.Domain.Models.Node", "ToNode")
                        .WithMany("IncomingConnections")
                        .HasForeignKey("ToNodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromNode");

                    b.Navigation("ToNode");
                });

            modelBuilder.Entity("Bakalauras.Domain.Models.Node", b =>
                {
                    b.Navigation("IncomingConnections");

                    b.Navigation("OutgoingConnections");
                });
#pragma warning restore 612, 618
        }
    }
}
